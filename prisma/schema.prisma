// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String     @id @default(cuid())
  clerkUserId String     @unique
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  email       String     @unique
  workflows   Workflow[]
  name        String
}

model Workflow {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  nodes     Node[]
  edges     Edge[]
}

model Node {
  id             String   @id @default(cuid())
  nodeId         String   @unique
  type           String
  positionX      Float
  positionY      Float
  data           Json     @default("{}")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  measuredWidth  Float?
  measuredHeight Float?
  workflowId     String
  workflow       Workflow @relation(fields: [workflowId], references: [id], onDelete: Cascade)

  sourceEdges Edge[] @relation("SourceNode")
  targetEdges Edge[] @relation("TargetNode")
}

model Edge {
  id         String   @id @default(cuid())
  edgeId     String   @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  workflowId String
  workflow   Workflow @relation(fields: [workflowId], references: [id], onDelete: Cascade)

  sourceNodeId String
  sourceNode   Node   @relation("SourceNode", fields: [sourceNodeId], references: [id], onDelete: Cascade)

  targetNodeId String
  targetNode   Node   @relation("TargetNode", fields: [targetNodeId], references: [id], onDelete: Cascade)
}
